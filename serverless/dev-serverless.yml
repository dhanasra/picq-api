service: picq-backend

plugins:
  - serverless-prune-plugin
  - serverless-offline

provider:
  name: aws
  runtime: nodejs18.x
  timeout: 30
  stage: dev
  environment:
    STAGE: ${self:custom.currentStage}
    ORIGIN_WHITELIST: http://localhost:4000,http://localhost:5000
    MONGO_DB_URL: mongodb+srv://spiderlingz:admin@serverlessinstance0.txwq8bv.mongodb.net/picq_dev?retryWrites=true&w=majority
    S3_BUCKET_NAME: picq-storage

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - "picq"
            - "/*"

custom:
  prune:
    automatic: true
    number: 1
  serverless-offline:
    httpPort: 4000
  defaultStage: dev
  currentStage: ${opt:stage, self:custom.defaultStage}

  # you can overwrite defaults here
  stage: ${self:custom.currentStage}

package:
  exclude:
    - "venv/**"

functions:
  auth:
    handler: ./handlers/auth.handler
    events:
      - http:
          path: /ping
          method: GET
          cors: true
      - http:
          path: /signup
          method: POST
          cors: true
      - http:
          path: /signin
          method: POST
          cors: true
      - http:
          path: /onboarding
          method: POST
          cors: true
  main:
    handler: ./handlers/main.handler
    events:
      - http:
          path: /main
          method: GET
          cors: true
  address:
    handler: ./handlers/address.handler
    events:
      - http:
          path: /address
          method: POST
          cors: true
      - http:
          path: /address/{addressID}
          method: GET
          cors: true
      - http:
          path: /address/{addressID}
          method: PUT
          cors: true
      - http:
          path: /address/{addressID}
          method: DELETE
          cors: true
  file:
    handler: ./handlers/file.handler
    events:
      - http:
          path: /upload
          method: POST
          cors: true
      - http:
          path: /upload/batch
          method: POST
          cors: true
  documents:
    handler: ./handlers/documents.handler
    events:
      - http:
          path: /documents
          method: POST
          cors: true
      - http:
          path: /documents/{documentID}
          method: PUT
          cors: true
  bookings:
    handler: ./handlers/bookings.handler
    events:
      - http:
          path: /bookings/offline
          method: POST
          cors: true
      - http:
          path: /bookings/offline/{id}
          method: PUT
          cors: true
      - http:
          path: /bookings
          method: GET
          cors: true